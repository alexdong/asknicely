FORMAT: 1A
HOST: http://app.asknice.ly/api/v1

# AskNicely
Subscribe a person and or trigger a survey question to them.


## Add a Person [/person/add]
Add or update a single person, or an array of people.

1. email is required and cannot be missing. Name or firstname is desired but you can leave this blank. 
2. segment (optional, add a keyword about a person that will be displayed within Ask Nicely dashboards, can be used for filtering and alerts). 
3. Any field that does not match (segment, email, name, firstname, lastname) will be added as a custom field. Use this to store additional data about a person. Custom fields are save with "_c" append to the name to prevent Ask Nicely name clashes.
4. triggeremail, true = send survey email now & store, false = just store person.
5. "forcesubject" (optional). Create a one time subject just for this email. 

### Add a Person [POST]
+ Request (application/json)

    + Headers
    
            X-apikey: your_apikey
            X-domainkey: your_domainkey
            
    + Body
        
            [
                { "name": "John Smith", "email":"john@example.com", "dashboard":"recommend", "triggeremail":false, "segment":"pro","mycustom_id":102 }
            ]
      

+ Response 201 (application/json)

        {id:12, "success":true,"msg":"added", emailed:false}


## Get a Person [/person/get/{id}/{key}]
Get the details of a single person. Use an Ask Nicely id, or the id of a custom field with the custom feild key. 

+ Parameters
    + id (required,  `12`) ... Numeric `id` of the person we want to view.
    + key (optional, string,  `mycustom_id`) ... Instead of using the Ask Nicely key, specify your own custom feild.

### Get a Person [GET]
+ Response 200 (application/json)
    
    + Headers
    
            X-apikey: your_apikey
            X-domainkey: your_domainkey

    + Body

            { "id": 12, "name": "John Smith", "email":"john@example.com" }


## Remove a Person [/person/remove/{id}/{key}]
Removes a person from Ask Nicely, any answers and comments will remain, but they will never be emailed again (unless you add them again).

+ Parameters
    + id (required,  `12`) ... Numeric `id` of the person we want to view.
    + key (optional, string,  `mycustom_id`) ... Instead of using the Ask Nicely key, specify your own custom feild.

### Remove a Person [GET]
+ Response 200 (application/json)
    
    + Headers
    
            X-apikey: your_apikey
            X-domainkey: your_domainkey

    + Body

            { "id": 12, "success": true, "msg":"removed" }




## Responses [/responses/{sort}/{pagesize}/{pagenumber}/{since_id}/{format}]
Download the latest responses

+ Parameters
    + sort (required, string,`desc`) ... Sort the results, default latest first "desc" or "asc"
    + pagesize (required, number,`50`) ... How many records to return per request, max 1000, default 50
    + pagenumber (required, number, `1`) ... Current page starting at 1, being the first page.
    + since_id (optional, number, `0`) ... Pass in the very last Ask Nicely Response id that you have downloaded (use 0 for everything). 
    + format (optional, string, `json`) ... Return all data back as json or use "csv" for a csv file (including headers). 

### List all Responses [GET]
+ Response 200 (application/json)

        {
            "success":true,
            "pagesize":50,
            "pagenumber":1,
            "total":500,
            "totalpages"10,
            "data":
            [{
              "id": 1, "email": "john@example.com"
            }, {
              "id": 2, "email": "jane@example.com"
            }]
        }






